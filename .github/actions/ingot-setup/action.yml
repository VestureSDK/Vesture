name: 'Ingot Setup'
description: 'Sets up the environment for the Ingot project'
author: 'Ingot'
runs:
  using: 'composite'
  steps:

    # Checkout the git repo
    - name: Git Checkout
      uses: actions/checkout@v4
        with:
          # Ensures MinVer finds what it needs
          fetch-depth: '0'
          filter: 'tree:0'

    # Attempts to restore the nuget cache to speed up
    # the dotnet tools and subsequent nuget restore
    - id: nuget-cache
      name: Restore NuGet Cache
      uses: actions/cache/restore@v4
      with:
        path: '~/.nuget/packages'
        key: "${{ runner.os }}-nuget-${{ hashFiles('**/global.json', '**/Directory.Packages.props', '**/dotnet-tools.json', '**/nuget.config') }}"
    
    # Restores dotnet tools and run the 
    # environment setup via invoke-build
    - shell: sh
      name: Environment Setup
      run: |
        dotnet tool restore
        dotnet ib ci-env-setup
        . ./dist/ib/config.env

    # Displays the INGOT_ environment variables
    # from sourcing the ./dist/ib/config.env file
    - shell: sh
      name: Debug Ingot Environment Variables
      run: env | grep '^INGOT_' || echo "No INGOT_ variables found"

    # Restores the necessary nuget packages
    # In order to create a relevant nuget cache
    - if: steps.nuget-cache.outputs.cache-hit != 'true'
      shell: sh
      name: Nuget Src Restore
      run: dotnet ib ci-src-restore

    # Saves the nuget cache created so subsequent
    # jobs can benefit from a restored cache
    - if: steps.nuget-cache.outputs.cache-hit != 'true'
      name: Save NuGet Cache
      uses: actions/cache/save@v4
      with:
        path: '~/.nuget/packages'
        key: ${{ steps.nuget-cache.outputs.cache-primary-key }}

    # Prints MinVer information to ease debugging
    - shell: sh
      name: MinVer Debug
      run: dotnet minver -v d